Four key principles of Hashing 
    One way - given an input, we can easily produce output but not vice versa
    Deterministic - same input produces same output 
    Uniform - reduce amt of possible hash collisions 
    Sensitive - a small change to input results in entirely diff has

Salting
    - Adds entropy to common passwords by adding extra string to back or front

BCrypt 
    - One way hashing function
    - Incorporates a salt to prevent hash/rainbow table ttacks 
    - Slower relative to other hashing functions
    - Adaptive, scales with computational power, resistant to brute force 
    - Include bcrypt gem in Gemfile
    - Verifies if two hashes were created frm same input w.o needing to reveal them

User Schema 
id              integer     not null, primary key 
username        string      not null, indexed, unique 
password_digest string      not null 
session_token   string          not null, indexed unique

3 KEY AUTH FUNCTIONALITIES 
    Sign up new users 
    Login existing users 
    Logout existing users

How do we 'Sign Up' a user ?
1. pass params(username, pw) through form 
2. create new instance of user with params.
3. try to save user in DB 
    - user needs password_digest and session_token attrs 
4. login, redirect, show errors, etc 